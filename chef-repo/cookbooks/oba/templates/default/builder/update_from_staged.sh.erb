#!/bin/bash -x
SERVER="admin.prod.wmata.obaweb.org"
PORT="80"
BUNDLE_DIR=/var/lib/oba/transitime

report_error() {
 aws ses send-email \
--from no.reply.onebusaway@gmail.com \
--destination "{ \"ToAddresses\": [\"sbrown@camsys.com\"], \"CcAddresses\": [], \"BccAddresses\": []}" \
--message "{ \"Subject\": { \"Data\": \"PROD FAIL: $1\", \"Charset\": \"UTF-8\"}, \"Body\": {\"Text\": {\"Data\": \"Prod Error\"}}}"
  exit 1
}

cd "$BUNDLE_DIR"
if [ -L $BUNDLE_DIR/gtfs ]
  then
  rm -f $BUNDLE_DIR/gtfs
fi
if [ -d $BUNDLE_DIR/gtfs ]
then
  echo "Directory exists!  exiting!"
  exit -1
fi

# set name, id, dataset from json
name=$(curl http://${SERVER}:${PORT}/api/bundle/staged/list | \
    python -c "import sys, json; print json.load(sys.stdin)['bundles'][0]['name']")
dataset=$(curl http://${SERVER}:${PORT}/api/bundle/staged/list | \
    python -c "import sys, json; print json.load(sys.stdin)['bundles'][0]['dataset']")

echo "Latest graph: name=$name id=$id dataset=$dataset"

# if this is a new dataset:
if [ ! -d "$name" ]; then
        
	mkdir -p $name
        cd "$name"

        # generate list of urls
        echo "Downloading files"
        curl ${SERVER}:${PORT}/api/bundle/archive/list-by-name/${dataset}/${name}/ | \
        tr -d '[]"' | \
        tr ',' '\n' | \
        grep '/final/' | \
	grep '\.zip' | \
	grep '1_' | \
        sed -e "s,^,http://${SERVER}:${PORT}/api/bundle/archive/get-by-name/${dataset}/${name}/," | \
        wget -i - || report_error "download failed $dataset/$name"
        echo "Download complete"
        ln -s $BUNDLE_DIR/$name $BUNDLE_DIR/gtfs || report_error "soft link failed"
	cd $BUNDLE_DIR/gtfs
	unzip *.zip || report_error "unzip of gtfs failed"
	cd $BUNDLE_DIR/processGTFS
	./processGTFS.sh || report_error "processGTFS failed $?"
        echo "shutting down!"
        YEAR=`date +"%Y"`
        MONTH=`date +"%m"`
        DAY=`date +"%d"`
        aws ses send-email \
        --from no.reply.onebusaway@gmail.com \
--destination "{ \"ToAddresses\": [\"sbrown@camsys.com\"], \"CcAddresses\": [], \"BccAddresses\": []}" \
--message "{ \"Subject\": { \"Data\": \"PROD Success: $1\", \"Charset\": \"UTF-8\"}, \"Body\": {\"Text\": {\"Data\": \"Prod Build Complete: `tail 1/core/$YEAR/$MONTH/$DAY/core.log`\"}}}"



else
        echo "Graph dir $name already exists!"
	report_error "Graph dir $name already exists!"
	exit 1
fi



echo

